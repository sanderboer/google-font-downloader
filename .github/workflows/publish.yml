name: Publish to PyPI

on:
  push:
    branches:
      - main
    paths:
      - "pyproject.toml"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect version change in pyproject
        id: version
        shell: bash
        run: |
          NEW_VER=$(awk '
            BEGIN{inproj=0}
            /^\[project\]$/{inproj=1; next}
            /^\[/{inproj=0}
            inproj && match($0,/^version\s*=\s*"([^"]+)"/,m){print m[1]; exit}
          ' pyproject.toml)
          echo "new=$NEW_VER" >> $GITHUB_OUTPUT
          if git rev-parse HEAD^ >/dev/null 2>&1 && git show HEAD^:pyproject.toml >/dev/null 2>&1; then
            OLD_VER=$(git show HEAD^:pyproject.toml | awk '
              BEGIN{inproj=0}
              /^\[project\]$/{inproj=1; next}
              /^\[/{inproj=0}
              inproj && match($0,/^version\s*=\s*"([^"]+)"/,m){print m[1]; exit}
            ')
          else
            OLD_VER=""
          fi
          echo "old=$OLD_VER" >> $GITHUB_OUTPUT
          if [ -n "$NEW_VER" ] && [ "$NEW_VER" != "$OLD_VER" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.version.outputs.changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip
        if: steps.version.outputs.changed == 'true'
        run: python -m pip install --upgrade pip

      - name: Install build tools
        if: steps.version.outputs.changed == 'true'
        run: pip install build

      - name: Install package (dev extras)
        if: steps.version.outputs.changed == 'true'
        run: pip install -e .[dev]

      - name: Lint
        if: steps.version.outputs.changed == 'true'
        run: ruff check .

      - name: Format Check
        if: steps.version.outputs.changed == 'true'
        run: ruff format --check .

      - name: Test
        if: steps.version.outputs.changed == 'true'
        run: pytest -q

      - name: Build sdist and wheel
        if: steps.version.outputs.changed == 'true'
        run: python -m build

      - name: Publish to PyPI (version bump on main)
        if: steps.version.outputs.changed == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
